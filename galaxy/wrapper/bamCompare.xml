<tool id="deeptools_bamCompare" name="bamCompare" version="@WRAPPER_VERSION@.0">
    <description>normalizes and compares two BAM files to obtain the ratio, log2ratio or difference. (bam2bigwig)</description>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <macros>
        <token name="@BINARY@">bamCompare</token>
        <import>deepTools_macros.xml</import>
    </macros>
    <command>
<![CDATA[
        bamCompare

        @THREADS@

        --bamfile1 '$bamFile1'
        -bai1 '${bamFile1.metadata.bam_index}'
        --bamfile2 '$bamFile2'
        -bai2 '${bamFile2.metadata.bam_index}'

        --outFileName '$outFileName'
        --outFileFormat '$outFileFormat'

        --fragmentLength $fragmentLength
        --binSize $binSize

        #if $scaling.method == 'SES':
            --scaleFactorsMethod SES
            --sampleLength $scaling.sampleLength
        #elif $scaling.method == 'readCount':
            --scaleFactorsMethod readCount
        #elif $scaling.method == 'own':
            --scaleFactors '$scaling.scaleFactor1:$scaling.scaleFactor2'
        #end if

        --ratio $comparison.type

        #if $comparison.type=='subtract':
            #if $comparison.normalization.type=='rpkm':
                --normalizeUsingRPKM
            #elif $comparison.normalization.type=='1x':

                #if $comparison.normalization.effectiveGenomeSize.effectiveGenomeSize_opt == "specific":
                    --normalizeTo1x $comparison.normalization.effectiveGenomeSize.effectiveGenomeSize
                #else:
                    --normalizeTo1x $comparison.normalization.effectiveGenomeSize.effectiveGenomeSize_opt
                #end if

            #end if
        #elif $comparison.type in ['ratio','log2']:
            --pseudocount $comparison.pseudocount
        #end if

        #if str($region).strip() != '':
            --region '$region'
        #end if

        #if $advancedOpt.showAdvancedOpt == "yes":
            #if $advancedOpt.smoothLength:
            --smoothLength '$advancedOpt.smoothLength'
            #end if

            $advancedOpt.doNotExtendPairedEnds
            $advancedOpt.ignoreDuplicates

            #if $advancedOpt.minMappingQuality:
                --minMappingQuality '$advancedOpt.minMappingQuality'
            #end if

            --missingDataAsZero $advancedOpt.missingDataAsZero

            #if str($advancedOpt.ignoreForNormalization).strip() != '':
                --ignoreForNormalization '$advancedOpt.ignoreForNormalization'
            #end if

        #end if
]]>
    </command>
    <inputs>
        <param name="bamFile1" format="bam" type="data" label="First BAM file (e.g. treated sample)"
            help="The BAM file must be sorted."/>
        <param name="bamFile2" format="bam" type="data" label="Second BAM file (e.g. control sample)"
            help="The BAM file must be sorted."/>
        <param name="fragmentLength" type="integer" value="200" min="1"
            label="Length of the average fragment size"
            help ="Reads will be extended to match this length unless they are paired-end, in which case they will be extended to match the fragment length. If this value is set to the read length or smaller, the read will not be extended. *Warning* the fragment length affects the normalization to 1x (see &quot;normalize coverage to 1x&quot;). The formula to normalize using the sequencing depth is genomeSize/(number of mapped reads * fragment length). *NOTE*: If the BAM files contain mated and unmated paired-end reads, unmated reads will be extended to match the fragment length. (--fragmentLength)"/>

        <param name="binSize" type="integer" value="50" min="1" 
            label="Bin size in bp"
            help="The genome will be divided in bins (also called tiles) of the specified length. For each bin the overlaping number of fragments (or reads)  will be reported. If only half a fragment overlaps, this fraction will be reported. (--binSize)"/>

        <conditional name="scaling">
            <param name="method" type="select" 
                label="Method to use for scaling the largest sample to the smallest">
                <option value="readCount" selected="true">read count</option>
                <option value="SES">signal extraction scaling (SES), check the bamFingerprint plot before using it!</option>
                <option value="own">enter own scaling factors</option>
            </param>
            <when value="SES">
                <param name="sampleLength" type="integer" value="1000" min="10"
                    label="Length in base pairs used to sample the genome and compute the size or scaling factors to compare the two  BAM files "
                    help="The default is fine. Only change it if you know what you are doing" />
            </when>
            <when value="readCount" />
            <when value="own">
                <expand macro="scaleFactor" />
            </when>
        </conditional>

        <conditional name="comparison">
            <param name="type" type="select" 
                label="How to compare the two files">
                <option value="log2" selected="true">Compute log2 of the number of reads ratio</option>
                <option value="ratio">Compute the ratio of the number of reads</option>
                <option value="subtract">Compute difference (subtract input from treatment) of the number of reads</option>
            </param>
            <when value="log2">
                <expand macro="pseudocount" />
            </when>
            <when value="ratio">
                <expand macro="pseudocount" />
            </when>
            <when value="subtract">
                <conditional name="normalization">
                    <param name="type" type="select" label="Normalization method" >
                        <option value="1x">Normalize coverage to 1x</option>
                        <option value="rpkm">Normalize to fragments (reads) per kilobase per million (RPKM)</option>
                        <option value="no">Do not normalize or scale</option>
                    </param>
                    <when value="rpkm" />
                    <when value="no" />
                    <when value="1x">
                        <expand macro="effectiveGenomeSize" />
                    </when>
                </conditional>
            </when>
        </conditional>

        <param name="outFileFormat" type="select" label="Coverage file format">
            <option value="bigwig" selected="true">bigwig</option>
            <option value="bedgraph">bedgraph</option>
        </param>
        <expand macro="region_limit_operation" />
        <conditional name="advancedOpt">
            <param name="showAdvancedOpt" type="select" label="Show advanced options" >
                <option value="no" selected="true">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="no" />
            <when value="yes">
                <param name="smoothLength" type="integer" value="1" optional="true" min="1"
                    label="Smooth values using the following length (in bp)"
                    help ="The smooth length defines a window, larger than the bin size, to average the number of reads. For example, if the bin size is set to 20 bp and the smooth length is set to 60 bp, then, for each bin size the average of it and its left and right neighbors is considered. Any value smaller than the bin size will be ignored and no smoothing will be applied. (--smoothLength)"/>
                <expand macro="doNotExtendPairedEnds" />
                <expand macro="ignoreDuplicates" />
                <expand macro="minMappingQuality" />
                <expand macro="missingDataAsZero" />
                <param name="ignoreForNormalization" type="text" value="" size="50"
                    label="regions that should be excluded for calculating the scaling factor"
                    help="Sometimes it makes sense to exclude certain regions when calculating the scaling factor. For example, if you know some regions that you suspect to be present more often in your sample's genome than in the reference genome that will therefore accumulate reads (CNV). Another typical example is the single X chromosome in male samples that should be scaled separately from the diploid autosomes. For example chrX,chrY,chr3. or chr10:12220-128932" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="bigwig" name="outFileName">
        <change_format>
            <when input="outFileFormat" value="bigwig" format="bigwig" />
            <when input="outFileFormat" value="bedgraph" format="bedgraph" />
        </change_format>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="bamFile1" value="bowtie2-test1.bam" ftype="bam" />
            <param name="bamFile2" value="bowtie2-test1.bam" ftype="bam" />
            <param name="showAdvancedOpt" value="no" />
            <param name="outFileFormat" value="bigwig" />
            <param name="fragmentLength" value="100" />
            <param name="outFileFormat" value="bedgraph" />
            <param name="binSize" value="5" />
            <param name="type" value="ratio" />
            <output name="outFileName" file="bamCompare_result1.bg" ftype="bedgraph" />
        </test>
    </tests>
    <help>
<![CDATA[
**What it does**

This tool compares two BAM files based on the number of mapped reads. To
compare the BAM files, the genome is partitioned into bins of equal size, then
the number of reads found in each BAM file is counted for such bins and
finally a summarizing value is reported. This value can be the ratio of the
number of reads per bin, the log2 of the ratio or the difference. This tool
can normalize the number of reads on each BAM file using the SES method
proposed by Diaz et al. (2012). "Normalization, bias correction, and peak
calling for ChIP-seq". Statistical applications in genetics and molecular
biology, 11(3). Normalization based on read counts is also available. The
output is either a bedgraph or a bigwig file containing the bin location and
the resulting comparison values. By default, if reads are mated, the fragment
length reported in the BAM file is used. In the case of paired-end mapping
each read mate is treated independently to avoid a bias when a mixture of
concordant and discordant pairs is present. This means that *each end* will be
extended to match the fragment length.


.. image:: $PATH_TO_IMAGES/norm_IGVsnapshot_indFiles.png


You can find more details on the bamCompare wiki page: https://github.com/fidelram/deepTools/wiki/Normalizations#wiki-bamCompare


**Output files**:

- same as for bamCoverage, except that you now obtain 1 coverage file that is based on 2 BAM files.

-----

@REFERENCES@
]]>
    </help>
    <expand macro="citations" />
</tool>
