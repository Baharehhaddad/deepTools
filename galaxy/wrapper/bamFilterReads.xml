<tool id="deeptools_bamfilterreads" name="bamfilterreads" version="@WRAPPER_VERSION@.0">
    <description>Filter BAM files according to specified parameters</description>
    <macros>
        <token name="@BINARY@">bamFilterReads</token>
        <import>deepTools_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command>
<![CDATA[
        #set label = re.sub('[^\.\s\w\-]', '_', str($bamfile.element_identifier))

        @BINARY@
        @THREADS@
        -b '$bamfile'

        --label '$label'

        -o '$outFile'

        #if str($filterRNAstrand) != 'no':
            --filterRNAstrand '$filterRNAstrand'
        #end if

        $ignoreDuplicates

        #if $minMappingQuality:
            --minMappingQuality '$minMappingQuality'
        #end if

        #if $samFlagInclude:
            --samFlagInclude $samFlagInclude
        #end if

        #if $samFlagExclude:
            --samFlagExclude $samFlagExclude
        #end if

        #if $minFragmentLength:
            --minFragmentLength $minFragmentLength
        #end if

        #if $maxFragmentLength:
            --maxFragmentLength $maxFragmentLength
        #end if

        #if ' '.join( map(str, $blackListFileName) ) != 'None':
            #set blfiles=[]
            #for $f in $blackListFileName:
                #silent $blfiles.append("'%s'" % $f)
            #end for
            #if $blfiles != ["'None'"]:
                --blackListFileName #echo ' '.join($blfiles)#
            #end if
        #end if

        #if $filterMetrics:
            --filterMetrics '$filterMetricsFile'
        #end if
]]>
    </command>

    <inputs>
        <param name="bamfile" format="bam" type="data" label="BAM file" />
        <param argument="filterRNAstrand" type="select" label="Only include reads originating from fragments from the forward or reverse strand." 
            help="By default (the no option), all reads are processed, regardless of the strand they originated from. For RNAseq, it can be useful to separately create bigWig files for the forward or reverse strands.
                  Note that this tools assumes that a dUTP-based method was used, so fragments will be assigned to the reverse strand if the second read in a pair is reverse complemented.">
            <option value="no" selected="true">no</option>
            <option value="forward">forward</option>
            <option value="reverse">reverse</option>
        </param>

        <expand macro="ignoreDuplicates" />
        <expand macro="minMappingQuality" />
        <expand macro="samFlags" />
        <expand macro="fragLength" />
        <expand macro="blacklist" />
        <param argument="--filterMetrics" type="boolean" label="Save the total number of reads seen and remaining after filtering to a text file" help="" />
    </inputs>
    <outputs>
        <data format="tabular" name="filterMetricsFile" label="${tool.name} on ${on_string}: filtering metrics">
            <filter>filterMetrics is True</filter>
        </data>
        <data format="bam" name="outFile" label="${tool.name} on ${on_string}: Filtered Alignments" />
    </outputs>
    <tests>
        <test>
            <param name="bamfile" value="paired_chr2L.bam" ftype="bam" />
            <param name="minMappingQuality" value="10" />
            <param name="filterMetrics" value="True" />
            <output name="outFile" file="bamFilterReads.bam" ftype="bam" />
            <output name="filterMetricsFile" file="bamFilterReads.txt" ftype="tabular" />
        </test>
    </tests>

    <help>
<![CDATA[

What it does
-------------

This tool is very much the counterpart of estimateReadFiltering, in that it can filter alignments based on a variety of desired criterion. While much of this can be done with samtools, this tool can additionally filter by fragment strand and length (e.g., for RNA-seq and ATAC-seq experiments, respectively).

Output
--------

The primary output is a BAM file with all alignments passing the desired criteria. Note that all unmapped reads are removed. Additionally, an optional text file can be produced with the following entries:

 * Number of reads passing the filtering criteria
 * Total number of initial reads

-----

@REFERENCES@
]]>
    </help>
    <expand macro="citations" />
</tool>
